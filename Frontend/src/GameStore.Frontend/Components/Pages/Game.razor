@page "/game/{id:guid}"
@using GameStore.Frontend.Models

@inject NavigationManager NavigationManager
@inject GamesClient GamesClient
@inject IJSRuntime JSRuntime

<PageTitle>@title</PageTitle>

@if (game is null)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (errorList.Count > 0)
    {
        @foreach (var error in errorList)
        {
            <div class="alert alert-danger">@error</div>
        }
    }

    <div class="row mt-4">
        <div class="col-md-4">
            <img src="@game.ImageUri" alt="@game.Name" class="img-fluid border border-secondary">
        </div>
        <div class="col-md-5">
            <h2>@game.Name</h2>
            <p class="mt-3">@game.Description</p>
            <p class="display-4 font-weight-bold">$@game.Price</p>            
            <p class="text-secondary mt-3">Release Date: @game.ReleaseDate.ToString("MMM dd, yyyy")</p>
        </div>
    </div>
}

@code {
    [Parameter]
    public Guid Id { get; set; }

    private GameDetails? game { get; set; }

    private string title = string.Empty;
    private List<string> errorList = [];

    protected override async Task OnParametersSetAsync()
    {
        game = await GamesClient.GetGameAsync(Id);
        title = $"Edit {game.Name}";
    }
}